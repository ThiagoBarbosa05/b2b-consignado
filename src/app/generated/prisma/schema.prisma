// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../src/app/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        String      @id @default(uuid())
  name      String
  register  String
  Consigned Consigned[]

  @@map("customers")
}

model Wines {
  id               String            @id @default(uuid())
  name             String
  country          String?
  region           String?
  price            Int
  type             WineType          @relation(fields: [typeId], references: [id])
  typeId           String            @map("type_id")
  winesOnConsigned wineOnConsigned[]

  // WineCount WineCount[]
  @@map("wines")
}

model WineType {
  id    String  @id @default(uuid())
  name  String
  wines Wines[]

  @@map("wine_type")
}

model Consigned {
  id               String            @id @default(uuid())
  customerId       String            @map("customer_id")
  customer         Customer          @relation(fields: [customerId], references: [id])
  winesOnConsigned wineOnConsigned[]
  createdAt        DateTime          @default(now()) @map("created_at")

  @@map("consigned")
}

model wineOnConsigned {
  consignedId String @map("consigned_id")
  wineId      String @map("wine_id")

  consigned Consigned @relation(fields: [consignedId], references: [id])
  wines     Wines     @relation(fields: [wineId], references: [id])

  balance Int
  count   Int?

  @@id([consignedId, wineId])
  @@map("wine_on_consigned")
}
